{"version":3,"file":"static/js/871.f31463e2.chunk.js","mappings":"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","sources":["components/Button/IconButton.styled.js","components/Button/IconButton.js","views/ContactsView/ContactItem.js","components/FormContacts/FormContacts.styled.js","components/FormContacts/FormContacts.js","components/Filter/FilterContacts.styled.js","components/Filter/FilterContacts.js","views/ContactsView/ContactsView.js","views/ContactsView/Contactsview.styled.js"],"sourcesContent":["import IconButton from '@mui/material/IconButton';\nimport { styled } from '@mui/material/styles';\n\nexport const IcButton = styled(IconButton)`\nmargin-left: auto;\n &:hover{\n    color:#db1a5e;\n  } \n}\n`\n\n\n","import * as React from 'react';\nimport Stack from '@mui/material/Stack';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { IcButton } from './IconButton.styled';\n\nexport default function IconButtons({ func }) {\n\n  return (\n    <Stack direction=\"row\" spacing={1} >\n      <IcButton aria-label=\"delete\" onClick={func} >\n        <DeleteIcon />\n      </IcButton>\n    </Stack >\n  );\n}","import *as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDeleteContactMutation } from \"Redux/ContactsReduser/ContactsSliceApi\";\nimport { styled } from '@mui/material/styles';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableRow from '@mui/material/TableRow';\nimport IconButtons from 'components/Button/IconButton';\nimport ContactsIcon from '@mui/icons-material/Contacts';\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 25,\n  },\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.action.hover,\n  },\n  '&:last-child td, &:last-child th': {\n    border: 0,\n  },\n}));\n\nconst ContactItem = ({ nameItem, numberItem, id }) => {\n  const [deleteContacts] = useDeleteContactMutation();\n\n  return (\n    <StyledTableRow key={id}>\n\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n      >\n        <ContactsIcon />\n        {nameItem}\n      </StyledTableCell>\n\n      <StyledTableCell\n        align=\"right\"\n      >\n        <LocalPhoneIcon />\n        {numberItem}\n      </StyledTableCell>\n\n      <StyledTableCell\n        align=\"right\"\n      >\n        <IconButtons func={() => deleteContacts(id)} />\n      </StyledTableCell>\n\n    </StyledTableRow>\n  );\n}\n\nexport default ContactItem;\nContactItem.propTypes = {\n  nameItem: PropTypes.string.isRequired,\n  numberItem: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\n\nexport const Form = styled.form`\ndisplay: grid;\nwidth: 450px;\npadding:5px;\nmargin:15px 0;\n`\n\nexport const Label = styled.label`\ndisplay: flex;\njustify-content: space-between;\nmargin-bottom:10px;\nheight: 35px;\nfont-size:20px;\n`\n\nexport const Input = styled.input`\nfont-size:20px;\nborder-radius:5px;\nborder:1 px solid;\n`","import { useState } from \"react\";\nimport { useAddContactMutation, useFetchContactsQuery } from \"Redux/ContactsReduser/ContactsSliceApi\";\nimport Notiflix from 'notiflix';\nimport { Form, Label, Input } from \"./FormContacts.styled\";\nimport OutlinedButtons from \"components/Button/Button\";\n\nexport default function FormAddContact() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('+380');\n  const { data } = useFetchContactsQuery();\n  const contactList = data;\n  const [addContact, { isLoading: isAdd }] = useAddContactMutation();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (\n      contactList.find(contact => contact.name.toLowerCase() === name.toLowerCase()) ||\n      contactList.find(contact => contact.number === number)\n    ) {\n      return Notiflix.Notify.failure(`${name} is already in contacts`);\n    }\n\n    await addContact({ name, number });\n    resetState();\n  };\n\n  const resetState = () => {\n    setName('');\n    setNumber('+380');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label >Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n\n        />\n      </Label>\n\n      <Label >Phone Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n\n        />\n      </Label>\n      <OutlinedButtons text={isAdd ? 'ADD...' : \"add contacts\"} type='submit' />\n    </Form>\n  )\n};","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  height: 40px;\n  width: 250px;\n  border: 1px solid rgba(109, 44, 32, 0.705);\n  border-radius: 5px;\n  margin-top: 5px;\n  font-size: 24px;\n`;\n","import React from \"react\";\nimport { Input, Label } from \"./FilterContacts.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { onChangeFilter } from \"Redux/FilterReduser/FilterSlice\";\n\n\nconst FilterContacts = () => {\n  const dispatch = useDispatch();\n  const inputValue = useSelector(state => state.filter.filter);\n\n  return (\n    <Label >Find contacts by name\n      <Input\n        type=\"text\"\n        value={inputValue}\n        onChange={e => dispatch(onChangeFilter(e.target.value))}\n      />\n    </Label>\n  )\n}\n\nexport default FilterContacts;","import FormAddContact from \"components/FormContacts/FormContacts\";\nimport * as React from 'react';\nimport ContactItem from \"./ContactItem\";\nimport { useFetchContactsQuery } from \"Redux/ContactsReduser/ContactsSliceApi\";\nimport { useSelector } from \"react-redux\";\nimport { Div } from \"./Contactsview.styled\";\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport FilterContacts from \"components/Filter/FilterContacts\";\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 25,\n  },\n}));\n\n\nconst ContactsView = () => {\n  const { data } = useFetchContactsQuery();\n  const inputFilter = useSelector((state) => state.filter.filter);\n  const contactList = data?.filter(item => item.name.toLowerCase().includes(inputFilter.toLowerCase()));\n\n  return (\n    <main>\n      <Div>\n        <FormAddContact />\n        <FilterContacts />\n      </Div>\n\n      {contactList &&\n        <TableContainer component={Paper}>\n          <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n            <TableHead>\n              <TableRow>\n                <StyledTableCell>Name</StyledTableCell>\n                <StyledTableCell align=\"right\">Phone Number</StyledTableCell>\n                <StyledTableCell align=\"right\">Action</StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {contactList.map((contact) => (\n                <ContactItem\n                  nameItem={contact.name}\n                  numberItem={contact.number}\n                  id={contact.id}\n                  key={contact.id}\n                />\n\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      }\n    </main>\n  );\n}\n\nexport default ContactsView;","import styled from \"styled-components\";\n\nexport const Div = styled.div`\ndisplay: flex;\njustify-content: space-between;\n`"],"names":["IcButton","styled","IconButton","IconButtons","func","Stack","direction","spacing","onClick","Delete","StyledTableCell","TableCell","theme","tableCellClasses","backgroundColor","palette","common","black","color","white","fontSize","StyledTableRow","TableRow","action","hover","border","nameItem","numberItem","id","useDeleteContactMutation","deleteContacts","component","scope","Contacts","align","LocalPhone","Form","Label","Input","FormAddContact","useState","name","setName","number","setNumber","contactList","useFetchContactsQuery","data","useAddContactMutation","addContact","isAdd","isLoading","handleChange","e","currentTarget","value","handleSubmit","preventDefault","find","contact","toLowerCase","Notiflix","resetState","onSubmit","type","pattern","title","required","onChange","text","dispatch","useDispatch","inputValue","useSelector","state","filter","onChangeFilter","target","inputFilter","item","includes","Div","TableContainer","Paper","Table","sx","minWidth","TableHead","TableBody","map","ContactItem"],"sourceRoot":""}